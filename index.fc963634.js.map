{"mappings":"CCwCA,AAlBA,SAAS,EAAW,CAAO,CAAE,CAAI,EAC/B,GAAI,AAAY,OAAZ,EACF,SAAS,IAAI,CAAC,MAAM,CAAC,EAAW,CAAA,EAAM,QACjC,CACL,IAAM,EAAS,SAAS,aAAa,CAAC,MAEjC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,OAAO,IAAI,CAAC,EAAA,CAAA,OAAA,QAAA,CAAA,GAAzB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAgC,CAAhC,IAAM,EAAN,EAAA,KAAA,CACG,EAAY,SAAS,aAAa,CAAC,KAEzC,CAAA,EAAU,WAAW,CAAG,EACxB,EAAU,MAAM,CAAC,EAAW,EAAS,CAAI,CAAC,EAAI,GAC9C,EAAO,MAAM,CAAC,EAChB,C,C,M,E,CANK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAQL,OAAO,CACT,CACF,EAlBa,SAAS,aAAa,CAAC,SAlBvB,CACX,MAAO,CACL,KAAM,CAAC,EACP,QAAS,CAAC,CACZ,EAEA,MAAO,CACL,IAAK,CACH,OAAQ,CAAC,EACT,WAAY,CAAC,CACf,EACA,OAAQ,CACN,OAAQ,CAAC,EACT,UAAW,CAAC,CACd,CACF,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nvar food = {\n    Drink: {\n        Wine: {},\n        Schnaps: {}\n    },\n    Fruit: {\n        Red: {\n            Cherry: {},\n            Strawberry: {}\n        },\n        Yellow: {\n            Banana: {},\n            Pineapple: {}\n        }\n    }\n};\nvar tree = document.querySelector('#tree');\nfunction createTree(element, data) {\n    if (element === null) document.body.append(createTree(true, data));\n    else {\n        var ulList = document.createElement('ul');\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = Object.keys(data)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var key = _step.value;\n                var ulListRow = document.createElement('li');\n                ulListRow.textContent = key;\n                ulListRow.append(createTree(element, data[key]));\n                ulList.append(ulListRow);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        return ulList;\n    }\n}\ncreateTree(tree, food);\n\n//# sourceMappingURL=index.fc963634.js.map\n","'use strict';\n\nconst food = {\n  Drink: {\n    Wine: {},\n    Schnaps: {},\n  },\n\n  Fruit: {\n    Red: {\n      Cherry: {},\n      Strawberry: {},\n    },\n    Yellow: {\n      Banana: {},\n      Pineapple: {},\n    },\n  },\n};\n\nconst tree = document.querySelector('#tree');\n\nfunction createTree(element, data) {\n  if (element === null) {\n    document.body.append(createTree(true, data));\n  } else {\n    const ulList = document.createElement('ul');\n\n    for (const key of Object.keys(data)) {\n      const ulListRow = document.createElement('li');\n\n      ulListRow.textContent = key;\n      ulListRow.append(createTree(element, data[key]));\n      ulList.append(ulListRow);\n    }\n\n    return ulList;\n  }\n}\n\ncreateTree(tree, food);\n"],"names":["createTree","element","data","document","body","append","ulList","createElement","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Object","keys","Symbol","iterator","next","done","key","value","ulListRow","textContent","err","return","querySelector","Drink","Wine","Schnaps","Fruit","Red","Cherry","Strawberry","Yellow","Banana","Pineapple"],"version":3,"file":"index.fc963634.js.map"}